openapi: 3.0.3
info:
  title: Task Management API
  version: 1.0.0
servers:
  - url: http://localhost:3333
paths:
  /tasks:
    post:
      summary: Create a new task
      requestBody:
        required: true
        content:
          application/json:
            schema:
              ref: '#/components/schemas/CreateTaskRequest'
              x-go-type: CreateTaskRequest
      responses:
        '201':
          description: Task created
          content:
            application/json:
              schema:
                ref: '#/components/schemas/CreateTaskResponse'
                x-go-type: CreateTaskResponse
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '403':
          description: Already Exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    get:
      summary: Get all tasks
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
            example: 1
          description: "Optional. Must be used together with 'amount'."
        - name: amount
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
            example: 1
          description: "Optional. Must be used together with 'page'."
      responses:
        '200':
          description: List of tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaskResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /tasks/{id}:
    get:
      summary: Get task by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Task found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: Task not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /tasks/{id}/status:
    patch:
      summary: Update task status
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: status
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Status updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: Task not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
components:
  schemas:
    TaskResponse:
      type: object
      required:
        - id
        - title
        - description
        - status
      properties:
        id:
          type: string
          format: uuid
          example: 550e8400-e29b-41d4-a716-446655440000
        title:
          type: string
          example: Feed cat
        description:
          type: string
          example: Feed cat in 5:00 pm
        status:
          type: string
          enum: [created, processing, done]
          example: created

    CreateTaskRequest:
      type: object
      required:
        - title
        - description
      properties:
        title:
          type: string
          example: Feed dog
        description:
          type: string
          example: Feed dog in 3:00 pm

    CreateResponse:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          format: uuid
          example: 550e8400-e29b-41d4-a716-446655440000

    ApiResponse:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          example: 500
        message:
          type: string
          example: Interal Server Error
      